<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
       default-autowire="byName">

    <util:properties id="dataSourceProps" location="classpath:props/important.properties"/>
    <bean id="dataSource" name="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="#{dataSourceProps['jdbc.driverClassName1']}" />
        <property name="url" value="#{dataSourceProps['jdbc.url1']}" />
        <property name="username" value="#{dataSourceProps['jdbc.username1']}" />
        <property name="password" value="#{dataSourceProps['jdbc.password1']}" />
        <property name="maxActive" value="25" />
        <property name="maxIdle" value="5" />
        <property name="minIdle" value="5" />
        <property name="initialSize" value="5" />
        <property name="maxWait" value="2000" />
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <property name="minEvictableIdleTimeMillis" value="180000" />
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="mapperLocations" value="classpath:mapper/*.xml" />
        <property name="configLocation" value="classpath:mybatis-config.xml" />
    </bean>

<!--对于mapper接口没有实现类的-->
	<!-- 第一种实例化mapper的方式配置扫描包，加载mapper代理对象   就可以自动输入mapper接口了-->
	<!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.test.dao"></property>
		 <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>-->

<!--  第二种是使用MapperFactoryBean来创建mapper对象   这种需要mapper接口和mapper的xml文件里有对应的信息-->
    <!--<bean id="bookDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="com.test.dao.BookDao"/>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>-->
    
    
<!--原始的接口来实现有dao接口的实现类-->
    <!--init-method="initMethod" destroy-method="destroyMethod"-->
    <bean id="userDao" class="com.my.dao.impl.UserDaoImpl" >
       
       <property name="sqlSessionFactory" ref="sqlSessionFactory"/>  
    </bean>
   
    


    

    

    

    

    

    




</beans>